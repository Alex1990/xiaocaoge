{"version":3,"sources":["webpack:///./src/components/PostListing/PostListing.jsx","webpack:///./src/templates/category.jsx"],"names":["PostListing","getPostList","postList","this","props","postEdges","forEach","postEdge","push","path","node","fields","slug","tags","frontmatter","cover","title","date","excerpt","timeToRead","render","year","className","map","post","index","postYear","moment","article","key","to","dateTime","format","Fragment","React","Component","CategoryTemplate","category","pageContext","data","allMarkdownRemark","edges","location","config","siteTitle","pageQuery"],"mappings":"oKAKMA,G,oHACJC,YAAA,WACE,IAAMC,EAAW,GAYjB,OAXAC,KAAKC,MAAMC,UAAUC,SAAQ,SAAAC,GAC3BL,EAASM,KAAK,CACZC,KAAMF,EAASG,KAAKC,OAAOC,KAC3BC,KAAMN,EAASG,KAAKI,YAAYD,KAChCE,MAAOR,EAASG,KAAKI,YAAYC,MACjCC,MAAOT,EAASG,KAAKI,YAAYE,MACjCC,KAAMV,EAASG,KAAKC,OAAOM,KAC3BC,QAASX,EAASG,KAAKQ,QACvBC,WAAYZ,EAASG,KAAKS,gBAGvBjB,G,EAETkB,OAAA,WACE,IACIC,EADEnB,EAAWC,KAAKF,cAGtB,OACE,yBAAKqB,UAAU,qBAEbpB,EAASqB,KAAI,SAACC,EAAMC,GAClB,IAAMC,EAAWC,IAAOH,EAAKP,MAAMI,OAC7BO,EACJ,6BAASC,IAAKJ,GACZ,4BACE,kBAAC,OAAD,CAAMK,GAAIN,EAAKf,KAAMoB,IAAKL,EAAKR,OAC5BQ,EAAKR,QAGV,yBAAKM,UAAU,aACb,0BAAMS,SAAUP,EAAKP,MAAOU,IAAOH,EAAKP,MAAMe,OAAO,iBAI3D,OAAIX,IAASK,GACXL,EAAOK,EAEL,kBAAC,IAAMO,SAAP,CAAgBJ,IAAKJ,GACnB,yBAAKH,UAAU,cAAf,KAAqCI,EAArC,MACCE,IAIAA,O,GA9CSM,IAAMC,YAqDjBnC,O,gPCnDMoC,E,kGACnBhB,OAAA,WAAU,IACAiB,EAAalC,KAAKC,MAAMkC,YAAxBD,SACFhC,EAAYF,KAAKC,MAAMmC,KAAKC,kBAAkBC,MACpD,OACE,kBAAC,IAAD,CAAQC,SAAUvC,KAAKC,MAAMsC,UAC3B,yBAAKpB,UAAU,sBACb,kBAAC,IAAD,CACEN,MAAK,sBAAwBqB,EAAxB,OAAuCM,IAAOC,YAErD,kBAAC,IAAD,CAAavC,UAAWA,O,GAVY6B,IAAMC,WAkBvCU,EAAS","file":"component---src-templates-category-jsx-2179ab9b65398f61888e.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport moment from 'moment';\nimport \"./PostListing.css\";\n\nclass PostListing extends React.Component {\n  getPostList() {\n    const postList = [];\n    this.props.postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead\n      });\n    });\n    return postList;\n  }\n  render() {\n    const postList = this.getPostList();\n    let year;\n\n    return (\n      <div className=\"wrapper post-list\">\n        {/* Your post list here. */\n        postList.map((post, index) => {\n          const postYear = moment(post.date).year();\n          const article = (\n            <article key={index}>\n              <h1>\n                <Link to={post.path} key={post.title}>\n                  {post.title}\n                </Link>\n              </h1>\n              <div className=\"post-meta\">\n                <time dateTime={post.date}>{moment(post.date).format('YYYY-MM-DD')}</time>\n              </div>\n            </article>\n          );\n          if (year !== postYear) {\n            year = postYear;\n            return (\n              <React.Fragment key={index}>\n                <div className=\"year-label\">&#8727; {postYear} &#8727;</div>\n                {article}\n              </React.Fragment>\n            );\n          }\n          return article;\n        })}\n      </div>\n    );\n  }\n}\n\nexport default PostListing;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport config from \"../../data/SiteConfig\";\n\nexport default class CategoryTemplate extends React.Component {\n  render() {\n    const { category } = this.props.pageContext;\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n    return (\n      <Layout location={this.props.location}>\n        <div className=\"category-container\">\n          <Helmet\n            title={`Posts in category \"${category}\" | ${config.siteTitle}`}\n          />\n          <PostListing postEdges={postEdges} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query CategoryPage($category: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { frontmatter: { category: { eq: $category } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}