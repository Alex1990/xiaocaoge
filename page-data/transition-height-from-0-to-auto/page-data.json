{"componentChunkName":"component---src-templates-post-jsx","path":"/transition-height-from-0-to-auto/","result":{"data":{"markdownRemark":{"html":"<p>CSS3的transition可以作用于大部分属性值为数值之类的属性，包括width、height、font-size、color、opacity等。但是将transition应用于<code class=\"language-text\">height:auto;时</code>，浏览器会识别height值为0，因此无法直接从<code class=\"language-text\">height: 0;</code>过渡到<code class=\"language-text\">height: auto;</code>。</p>\n<p>一种简单的方法是，将过渡应用于max-height属性，通过设置一个大于元素所可能达到的最大高度值。代码如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.elem</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">max-height</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">-webkit-transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translate3d</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span>0<span class=\"token punctuation\">,</span>0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 开启硬件加速 */</span>\n    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translate3d</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span>0<span class=\"token punctuation\">,</span>0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">-webkit-transition</span><span class=\"token punctuation\">:</span> all .3s ease-in<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> all .3s ease-in<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.elem-show</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">max-height</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 假如元素的最大可能高度为200px */</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>缺陷是，在元素最大可能高度与实际高度相差比较大时，由于过渡总是从最大可能高度过渡到0，因此会看到过渡效果有明显延迟。查看<a href=\"/demo/transition-auto-delay.html\">DEMO</a>\n另一种方法是通过JS修正<code class=\"language-text\">height:auto;</code>不能过渡的问题，从而也避免了第一种方法的缺陷。思路是：</p>\n<ul>\n<li>先不设置最大可能高度，先在隐藏状态下获取该元素的实际高度，通过设置<code class=\"language-text\">elem.style.visibility = &#39;hidden&#39;;</code>隐藏该元素;</li>\n<li>要显示元素时，通过DOM2 Style的<code class=\"language-text\">insertRule()</code>方法将所获取的高度插入到样式表中，再添加一个class，触发过渡效果；</li>\n<li>待要隐藏元素时，再通过<code class=\"language-text\">deleteRule()</code>把刚才添加的CSS规则移除，并去掉添加的class；\n由于改变样式表，所以导致了全局重绘，性能不如第一种。</li>\n</ul>\n<p>使用两种方法写的一个下拉菜单效果：<a href=\"/demo/transition-height-from-0-to-auto.html\">DEMO</a>，可查看相关源码</p>\n<p><strong>参考资源：</strong></p>\n<ul>\n<li>CSS transition height: 0; to height: auto;：<a href=\"http://stackoverflow.com/questions/3508605/css-transition-height-0-to-height-auto\">http://stackoverflow.com/questions/3508605/css-transition-height-0-to-height-auto</a></li>\n<li>CSS transition from/to auto values: <a href=\"http://n12v.com/css-transition-to-from-auto/\">http://n12v.com/css-transition-to-from-auto/</a></li>\n</ul>","timeToRead":2,"excerpt":"CSS3的transition可以作用于大部分属性值为数值之类的属性，包括width、height、font-size、color、opacity等。但是将transition应用于，浏览器会识别height值为0，因此无法直接从过渡到。 一种简单的方法是，将过渡应用于max…","frontmatter":{"title":"Transition height from 0 to auto","cover":"","date":"2014-04-04","category":"前端","tags":["auto","height auto","transition"]},"fields":{"slug":"/transition-height-from-0-to-auto/","date":"2014-04-03T16:00:00.000Z"}}},"pageContext":{"slug":"/transition-height-from-0-to-auto/"}},"staticQueryHashes":[]}