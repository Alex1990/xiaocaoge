{"componentChunkName":"component---src-templates-post-jsx","path":"/lodash-shrinking/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"前言\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"前言 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h2>\n<p>大约一两年前，浏览器端使用 Lodash 还是 Underscore，我还是认为 Underscore 有些自己的优势的：前端大都熟悉、体积小。但是随着自己做的前端应用越来越复杂，随便一个 UI 库，甚至一个复杂的组件，如表格、曲线图，其大小都比 Lodash 还要大，所有 JS 压缩加 gzip 之后大小几百 KB，甚至超过 1M。而且随着 Lodash 这的快速发展，越来越丰富而实用的方法，用着是越来顺手了。</p>\n<p>但是，真正常用的 Lodash 方法实际上只占所有方法的一小部分，所以还是会想着怎么才能只打包自己用到的方法。</p>\n<p>当然，也有多种方法可以做到的，比如使用<a href=\"https://lodash.com/custom-builds\">自定义构建</a>、直接引入具体方法（<code class=\"language-text\">import map from &#39;lodash/map&#39;</code>）。但是这些方法都有各自的缺点：</p>\n<ul>\n<li><strong>自定义构建</strong>：假如用到一开始自定义构建没有的方法，则需要修改自定义配置。且做到方法级别的按需打包依赖，一来繁琐，二来团队成员还得查看到底配置了哪些方法，不能随心所欲地用。另外，<a href=\"https://github.com/lodash/lodash/wiki/Roadmap\">Lodash v5.0.0</a> 将要放弃自定义构建工具 lodash-cli 的维护。</li>\n<li><strong>直接引入具体方法</strong>：虽然这个可以避免上面的方法的缺点，但是使用起来变得繁琐了，不能直接使用<code class=\"language-text\">_</code>。</li>\n</ul>\n<h2 id=\"正篇\" style=\"position:relative;\"><a href=\"#%E6%AD%A3%E7%AF%87\" aria-label=\"正篇 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>正篇</h2>\n<p>说了这么多，进入正篇环节。</p>\n<p>就是通过 <a href=\"https://www.npmjs.com/package/babel-plugin-lodash\">babel-plugin-lodash</a> 和 <a href=\"https://www.npmjs.com/package/lodash-webpack-plugin\">lodash-webpack-plugin</a> 两个插件来实现。看插件源码记录，原来早就有了，只是我现在才知道。</p>\n<h3 id=\"babel-plugin-lodash\" style=\"position:relative;\"><a href=\"#babel-plugin-lodash\" aria-label=\"babel plugin lodash permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>babel-plugin-lodash</h3>\n<p>用于实现方法级别的按需打包，官方称为 cherry-picked builds，就是下面的效果：</p>\n<p>源代码：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import _ from &#39;lodash&#39;;\nimport { add } from &#39;lodash/fp&#39;;\n\nconst addOne = add(1);\n_.map([1, 2, 3], addOne);</code></pre></div>\n<p>打包后：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> _add <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash/fp/add'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> _map <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash/map'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> addOne <span class=\"token operator\">=</span> <span class=\"token function\">_add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">_map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> addOne<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>关于配置可以参考 babel-plugin-lodash 的文档，只是需要注意该插件的限制：</p>\n<ul>\n<li>只支持 ES2015 imports 也就是 ES6 modules 方式引入 Lodash</li>\n<li>Babel &#x3C; 6，Node.js &#x3C; 4 都不支持</li>\n<li>链式写法也不支持</li>\n</ul>\n<h3 id=\"lodash-webpack-plugin\" style=\"position:relative;\"><a href=\"#lodash-webpack-plugin\" aria-label=\"lodash webpack plugin permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>lodash-webpack-plugin</h3>\n<p>这个插件的功能就是把 Feature sets 使用 <a href=\"https://lodash.com/docs#noop\">noop</a>、<a href=\"https://lodash.com/docs#identity\">identity</a> 或者其他形式替代了。</p>\n<p>具体使用以及 Feature Sets 可查看插件官方文档。</p>\n<h2 id=\"示例配置\" style=\"position:relative;\"><a href=\"#%E7%A4%BA%E4%BE%8B%E9%85%8D%E7%BD%AE\" aria-label=\"示例配置 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>示例配置</h2>\n<p>下面是一个简单的结合两个插件的配置示例，来对比一下效果。</p>\n<p><strong>entry.js</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> _ <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> users <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      first<span class=\"token operator\">:</span> <span class=\"token string\">'Alex'</span><span class=\"token punctuation\">,</span>\n      last<span class=\"token operator\">:</span> <span class=\"token string\">'Chao'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    age<span class=\"token operator\">:</span> <span class=\"token number\">27</span><span class=\"token punctuation\">,</span>\n    address<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      province<span class=\"token operator\">:</span> <span class=\"token string\">'Beijing'</span><span class=\"token punctuation\">,</span>\n      city<span class=\"token operator\">:</span> <span class=\"token string\">'Beijing'</span><span class=\"token punctuation\">,</span>\n      county<span class=\"token operator\">:</span> <span class=\"token string\">'Haidian'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n_<span class=\"token punctuation\">.</span><span class=\"token function\">sortBy</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">,</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> beijingUsers <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> address<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> province <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> province <span class=\"token operator\">===</span> <span class=\"token string\">'Beijing'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>beijingUsers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> fullNames <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> first<span class=\"token punctuation\">,</span> last <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>first<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>last<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fullNames<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">,</span> <span class=\"token string\">'0.name.first'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>webpack.config.babel.js</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> webpack <span class=\"token keyword\">from</span> <span class=\"token string\">'webpack'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> LodashModuleReplacementPlugin <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash-webpack-plugin'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> plugins <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  plugins<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">LodashModuleReplacementPlugin</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  module<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    loaders<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        test<span class=\"token operator\">:</span> <span class=\"token regex\">/\\.js$/</span><span class=\"token punctuation\">,</span>\n        loader<span class=\"token operator\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span>\n        exclude<span class=\"token operator\">:</span> <span class=\"token regex\">/node_modules/</span><span class=\"token punctuation\">,</span>\n        options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          plugins<span class=\"token operator\">:</span> <span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'lodash'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n          presets<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'es2015'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> config<span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>npm scripts</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"build-all\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rimraf bundle* &amp;&amp; npm run build &amp;&amp; npm run build-shrinking\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm run bundle &amp;&amp; npm run uglify &amp;&amp; npm run uglify-gzip\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"build-shrinking\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm run bundle-shrinking &amp;&amp; npm run uglify-shrinking &amp;&amp; npm run uglify-gzip-shrinking\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"bundle\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack entry.js bundle.js\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"bundle-shrinking\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"NODE_ENV=production webpack entry.js bundle-shrinking.js\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"uglify\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"uglifyjs bundle.js --compress=warnings=false --mangle --output bundle.min.js\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"uglify-shrinking\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"uglifyjs bundle-shrinking.js --compress=warnings=false --mangle --output bundle-shrinking.min.js\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"uglify-gzip\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"gzip --keep bundle.min.js\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"uglify-gzip-shrinking\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"gzip --keep bundle-shrinking.min.js\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"clean\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rimraf bundle*\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>运行<code class=\"language-text\">npm run build-all</code>之后，查看 bundle 文件大小<code class=\"language-text\">ll -h bundle*</code>如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"txt\"><pre class=\"language-txt\"><code class=\"language-txt\">-rw-r--r--  1 chaoalex  staff    19K Mar 11 23:13 bundle-shrinking.js\n-rw-r--r--  1 chaoalex  staff   3.6K Mar 11 23:13 bundle-shrinking.min.js\n-rw-r--r--  1 chaoalex  staff   1.3K Mar 11 23:13 bundle-shrinking.min.js.gz\n-rw-r--r--  1 chaoalex  staff   532K Mar 11 23:13 bundle.js\n-rw-r--r--  1 chaoalex  staff    71K Mar 11 23:13 bundle.min.js\n-rw-r--r--  1 chaoalex  staff    25K Mar 11 23:13 bundle.min.js.gz</code></pre></div>\n<p>从上面可以看到使用插件，并且经过 UglifyJS + gzip 之后，大小差了 20 多 KB，当然随着使用的 Lodash 方法增多，这个值会变小，不过实际项目中很少能用到超过一半的方法，所以效果还是很明显的。</p>\n<p>完整的示例代码请查看 <a href=\"https://github.com/Alex1990/lodash-shrinking-demo\">lodash-shrinking-demo</a>。</p>\n<h3 id=\"链式写法与code-classlanguage-text_flowcode\" style=\"position:relative;\"><a href=\"#%E9%93%BE%E5%BC%8F%E5%86%99%E6%B3%95%E4%B8%8Ecode-classlanguage-text_flowcode\" aria-label=\"链式写法与code classlanguage text_flowcode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>链式写法与<code class=\"language-text\">_.flow()</code></h3>\n<p>babel-plugin-lodash 不支持使用<code class=\"language-text\">_.chain()</code>方法形式的链式写法，但是利用<code class=\"language-text\">_.flow()</code>方法可以实现相同效果：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> _ <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> sortBy <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash/fp/sortBy'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> map <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash/fp/map'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span>\n    level<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">,</span>\n    level<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'C'</span><span class=\"token punctuation\">,</span>\n    level<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> getNames <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">flow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token function\">sortBy</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span> <span class=\"token operator\">=></span> v<span class=\"token punctuation\">.</span>level<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span> <span class=\"token operator\">=></span> v<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> names <span class=\"token operator\">=</span> <span class=\"token function\">getNames</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","timeToRead":5,"excerpt":"前言 大约一两年前，浏览器端使用 Lodash 还是 Underscore，我还是认为 Underscore 有些自己的优势的：前端大都熟悉、体积小。但是随着自己做的前端应用越来越复杂，随便一个 UI 库，甚至一个复杂的组件，如表格、曲线图，其大小都比 Lodash…","frontmatter":{"title":"更小体积的 Lodash","cover":"","date":"2017-03-11","category":"前端","tags":["Lodash","Babel","Webpack"]},"fields":{"slug":"/lodash-shrinking/","date":"2017-03-10T16:00:00.000Z"}}},"pageContext":{"slug":"/lodash-shrinking/"}},"staticQueryHashes":[]}