{"componentChunkName":"component---src-templates-post-jsx","path":"/batch-operations/","result":{"data":{"markdownRemark":{"html":"<p><strong>批量功能</strong>：这里指需要对全部数据当中的一组数据进行查询、选择、修改、删除等操作的功能，也包括添加一组数据，即批量添加，这些操作统称<strong>批量操作</strong>。批量操作在软件系统当中应用很普遍，比如删除一组文件、删除符合特定条件的邮件、删除购物车里面选择的商品等等。而批量操作在后台管理系统当中尤其常见，比如博客管理后台、电商网站商家管理后台。</p>\n<p>下面以<strong>用户管理</strong>功能为例，从两个方面谈下批量功能设计。</p>\n<ul>\n<li>HTTP API 设计</li>\n<li>界面交互设计</li>\n</ul>\n<h2 id=\"http-api-设计\" style=\"position:relative;\"><a href=\"#http-api-%E8%AE%BE%E8%AE%A1\" aria-label=\"http api 设计 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTTP API 设计</h2>\n<p>一个典型的非批量操作 RESTful API 设计如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"># 获取用户列表\nGET /api/v1/users\n\n# 获取单个用户信息\nGET /api/v1/users/:id\n\n# 创建一个用户\nPOST /api/v1/users\n\n# 更新一个用户信息\nPATCH /api/v1/users/:id\n\n# 替换一个用户信息\nPUT /api/v1/users/:id\n\n# 删除一个用户\nDELETE /api/v1/users/:id</code></pre></div>\n<p>然后分别实现对应的批量操作 API。</p>\n<h3 id=\"批量创建用户\" style=\"position:relative;\"><a href=\"#%E6%89%B9%E9%87%8F%E5%88%9B%E5%BB%BA%E7%94%A8%E6%88%B7\" aria-label=\"批量创建用户 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>批量创建用户</h3>\n<p>这个与创建单个用户一样，不同的是发送的数据是一组数据，比如 JSON 数组。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">POST /api/v1/users</code></pre></div>\n<h3 id=\"获取多个指定用户信息\" style=\"position:relative;\"><a href=\"#%E8%8E%B7%E5%8F%96%E5%A4%9A%E4%B8%AA%E6%8C%87%E5%AE%9A%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF\" aria-label=\"获取多个指定用户信息 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>获取多个指定用户信息</h3>\n<p>比如根据用户ID来查询，假如只有几个或几十个，那把要查询的用户ID放到查询字符串里面到也没有技术上的问题。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">GET /api/v1/users?ids=001,002,003</code></pre></div>\n<p>但是如果 ID 数比较多或者 ID 比较长时，URL 长度会太长，然后浏览器或者服务器可能无法正常处理。这个时候简单直接，但是不符合 REST 规范的方式是使用 POST：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">POST /api/v1/userlists\n[&quot;001&quot;,&quot;002&quot;,&quot;003&quot;]</code></pre></div>\n<p>如果要符合 REST 规范来实现，需要两个请求，一个是和上面一样：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">POST /api/v1/userlists\n[&quot;001&quot;,&quot;002&quot;,&quot;003&quot;]</code></pre></div>\n<p>然后返回创建的资源<code class=\"language-text\">userlist</code>的 ID：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  &quot;id&quot;: &quot;0001&quot;\n}</code></pre></div>\n<p>然后利用该 ID 发送第二个请求：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">GET /api/v1/userlists/0001</code></pre></div>\n<p>通常这些查询是临时性的，所以查过之后就可以从数据库删除了，或者说只用在内存中存一下。</p>\n<h3 id=\"更新多个用户信息\" style=\"position:relative;\"><a href=\"#%E6%9B%B4%E6%96%B0%E5%A4%9A%E4%B8%AA%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF\" aria-label=\"更新多个用户信息 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>更新多个用户信息</h3>\n<p>下面的方式不符合 REST 方式，如果要符合可以参考上面的 GET 实现方式，创建一个临时的<code class=\"language-text\">userlist</code>，只不过实现麻烦，过程复杂化了。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">PATCH /api/v1/users\n[\n  {\n    &quot;id&quot;: &quot;001&quot;,\n    &quot;name&quot;: &quot;zhangsan&quot;\n  },\n  {\n    &quot;id&quot;: &quot;002&quot;,\n    &quot;name&quot;: &quot;lisi&quot;\n  }\n]\n\nPUT /api/v1/users\n[\n  {\n    &quot;id&quot;: &quot;001&quot;,\n    &quot;name&quot;: &quot;zhangsan&quot;,\n    &quot;gender&quot;: &quot;male&quot;,\n    &quot;birthday&quot;: &quot;2012-1-1&quot;\n  },\n  {\n    &quot;id&quot;: &quot;002&quot;,\n    &quot;name&quot;: &quot;lisi&quot;,\n    &quot;gender&quot;: &quot;male&quot;,\n    &quot;birthday&quot;: &quot;2013-11-2&quot;\n  }\n]</code></pre></div>\n<h3 id=\"删除多个用户信息\" style=\"position:relative;\"><a href=\"#%E5%88%A0%E9%99%A4%E5%A4%9A%E4%B8%AA%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF\" aria-label=\"删除多个用户信息 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>删除多个用户信息</h3>\n<p>同样的，下面实现方式不符合 REST 方式。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">DELETE /api/v1/users\n[&quot;001&quot;,&quot;002&quot;]</code></pre></div>\n<h3 id=\"返回值\" style=\"position:relative;\"><a href=\"#%E8%BF%94%E5%9B%9E%E5%80%BC\" aria-label=\"返回值 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>返回值</h3>\n<p>有时一次批量操作请求执行后，多个资源的操作结果不一样，这时返回的结果就要包含多个资源的操作结果。下面以同时创建多个用户为例：</p>\n<p>发送创建请求：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">POST /api/v1/users\n[\n  {\n    &quot;name&quot;: &quot;user1&quot;,\n  },\n  {\n    &quot;name&quot;: &quot;user2&quot;,\n  }\n]</code></pre></div>\n<p>其返回值是：</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"success\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"message\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"data\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"user1\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"success\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"message\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"用户已存在\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"user2\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"success\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"message\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>如果只关心失败的结果，返回结果可以只包含创建失败的信息。</p>\n<h3 id=\"其他注意事项\" style=\"position:relative;\"><a href=\"#%E5%85%B6%E4%BB%96%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9\" aria-label=\"其他注意事项 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>其他注意事项</h3>\n<ul>\n<li><strong>最多操作数据条数</strong>：即使接口可以支持批量操作，也应该有个最大限制，同时用户输入端也要有限制，API 文档也应说明。</li>\n<li><strong>进度</strong>：如果批量操作过程过长，比如几分钟，这时可以提供执行进度信息。</li>\n<li><strong>权限</strong>：在涉及到重要价值的资源时，批量操作可能需要慎重执行，需要合理设计好执行人的权限。</li>\n</ul>\n<h2 id=\"界面交互设计\" style=\"position:relative;\"><a href=\"#%E7%95%8C%E9%9D%A2%E4%BA%A4%E4%BA%92%E8%AE%BE%E8%AE%A1\" aria-label=\"界面交互设计 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>界面交互设计</h2>\n<h3 id=\"选择\" style=\"position:relative;\"><a href=\"#%E9%80%89%E6%8B%A9\" aria-label=\"选择 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>选择</h3>\n<p><strong>全选功能</strong>几乎是必需的，通过点击复选框来选择时，可以适当考虑点击的范围，便于用户点选。除了点选，还有其他选择方式，比如拖动方式、键盘结合方式。桌面操作系统经常利用<code class=\"language-text\">Ctrl</code>和<code class=\"language-text\">Shift</code>键与鼠标结合操作，<code class=\"language-text\">Ctrl + 点击</code>增量选择一个，<code class=\"language-text\">Shift + 点击</code>选择连续的几个，不过键盘方式只适合高级用户使用，方式比较隐晦。</p>\n<h3 id=\"排序与搜索\" style=\"position:relative;\"><a href=\"#%E6%8E%92%E5%BA%8F%E4%B8%8E%E6%90%9C%E7%B4%A2\" aria-label=\"排序与搜索 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>排序与搜索</h3>\n<p>有时数据比较多，又或者只是想加快选择的速度，这时候需要结合排序和搜索功能，快速缩减数据范围。</p>\n<ul>\n<li><strong>排序</strong></li>\n</ul>\n<p>常见的一种展现多条数据的方式是列表，表格也可以看成是列表，在展现数据时，数据的默认排序很重要。既可以把用户关心的数据排到前面，也可以给出一种数据的规律，便于用户浏览。有时还需要用户可以选择排序方式和排序的数据列。</p>\n<ul>\n<li><strong>搜索</strong></li>\n</ul>\n<p>简单的只是一个搜索框来搜索所有数据列。如果要实现更精确的搜索，就需要实现单独列以及列的组合搜索。正则搜索功能是否实现，要看用户的属性，对于程序员可能比较熟悉易用，但普通用户还是慎用。</p>\n<h3 id=\"文本框和文件\" style=\"position:relative;\"><a href=\"#%E6%96%87%E6%9C%AC%E6%A1%86%E5%92%8C%E6%96%87%E4%BB%B6\" aria-label=\"文本框和文件 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>文本框和文件</h3>\n<p>即使通过排序或搜索缩减了数据范围，可能仍然不能满足某些用户或特定场景的需求。比如我已经获取到了一组数据的 IDs，这些 IDs 就是我想删除的用户。当然可以通过直接操作数据库来快速完成，但是操作数据库只是临时方案，不能作为长久之计。这时候可以提供一个文本输入框来让用户粘贴数据或者通过上传一个文件方式来完成，毕竟我们让用户选择只是为了得到一组<strong>输入</strong>数据。</p>\n<p>另外通过文本框或文件方式，也可以快速实现添加或更新大量数据。</p>\n<h3 id=\"其他注意事项-1\" style=\"position:relative;\"><a href=\"#%E5%85%B6%E4%BB%96%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9-1\" aria-label=\"其他注意事项 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>其他注意事项</h3>\n<ul>\n<li><strong>单条数据操作</strong>：常见的一个误区是，很多产品有了批量操作功能之后，快捷的单条数据操作功能却没有，除非绝大部分操作肯定都是多条数据操作，否则应该提供一些单条数据操作功能。</li>\n<li><strong>批量操作结果</strong>：正如前文 HTTP API 设计中提到的多条数据的操作结果可能不同，这个时候操作结果展现方式会和单条数据操作结果不同。</li>\n</ul>","timeToRead":6,"excerpt":"…","frontmatter":{"title":"批量功能设计","cover":"","date":"2017-02-08","category":"前端","tags":["批量","批量操作","API","UI"]},"fields":{"slug":"/batch-operations/","date":"2017-02-07T16:00:00.000Z"}}},"pageContext":{"slug":"/batch-operations/"}},"staticQueryHashes":[]}