{"componentChunkName":"component---src-templates-post-jsx","path":"/redefine-clearfix-float/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"经典\" style=\"position:relative;\"><a href=\"#%E7%BB%8F%E5%85%B8\" aria-label=\"经典 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>经典</h2>\n<p>以前最经典的清除浮动方法是利用<code class=\"language-text\">:after</code>伪元素，代码如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.clearfix:after</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\".\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 元素内容后面，即元素闭合标签前面加个点 */</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 伪元素高度为0 */</span>\n    <span class=\"token property\">visibility</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 隐藏伪元素内容 */</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 默认是inline，所以默认clear不起作用 */</span>\n    <span class=\"token property\">clear</span><span class=\"token punctuation\">:</span> both<span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 清除浮动 */</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.clearfix</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">zoom</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 针对IE6/7，触发hasLayout */</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>这种方法可兼容几乎所有浏览器，使用方便，不用在HTML代码中增加一个空标签，因此仍然被很多人使用。</p>\n<p>但是，实际上针对IE6/7的方法与针对现代浏览器增加<code class=\"language-text\">:after</code>伪元素的方法本质上是不同的。针对IE6/7的<code class=\"language-text\">zoom:1;</code>使得元素触发了<a href=\"http://satzansatz.de/cssd/onhavinglayout.html\">hasLayout</a>这个IE专有特性，从而使得元素表现得如同现代浏览器里的<a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Block_formatting_context\">BFC</a> (Block Formatting Context)一样，比如阻止与子元素垂直方向的<a href=\"http://www.w3school.com.cn/css/css_margin_collapsing.asp\">外边距叠加</a>、包裹内部的浮动元素、不与浮动元素重叠。而针对现代浏览器的<code class=\"language-text\">:after</code>伪元素方法具有了“包裹内部的浮动元素”这一功能，因此在特别的布局中会产生问题，比如被清除浮动元素与浮动元素并排时，又比如被清除浮动元素内部第一个元素具有垂直方向的外边距时，关于可能产生的问题详见这篇文章：<a href=\"http://www.cssmojo.com/clearfix_block-formatting-context_and_hasLayout/\">Everything you Know about Clearfix is Wrong</a>。</p>\n<h2 id=\"增强\" style=\"position:relative;\"><a href=\"#%E5%A2%9E%E5%BC%BA\" aria-label=\"增强 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>增强</h2>\n<p>鉴于以上问题，上面文章的作者后来在<a href=\"http://www.yuiblog.com/blog/2010/09/27/clearfix-reloaded-overflowhidden-demystified/\">clearfix Reloaded + overflow:hidden Demystified</a>一文中介绍了一种技术，利用<code class=\"language-text\">:before</code>伪元素在被清除浮动元素的内容前面插入伪元素，并设置<code class=\"language-text\">overflow:hidden</code>使该伪元素具有BFC，因此可以阻止与内部元素垂直方向的外边距叠加。代码如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.clearfix:before,\n.clearfix:after</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\".\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.clearfix:after</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">clear</span><span class=\"token punctuation\">:</span> both<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.clearfix</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">zoom</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"精简\" style=\"position:relative;\"><a href=\"#%E7%B2%BE%E7%AE%80\" aria-label=\"精简 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>精简</h2>\n<p>此后，来自Twitter的Nicolas Gallagher，也是normalize.css的作者，提出了一个更精简的实现方法，被他称为“micro clearfix”，此方法讲解可参考其写的一篇文章：<a href=\"http://nicolasgallagher.com/micro-clearfix-hack/\">A new micro clearfix hack</a>。其代码如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.cf:before,\n.cf:after</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> table<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.cf:after</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">clear</span><span class=\"token punctuation\">:</span> both<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.cf</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">zoom</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>该技术关键之处：一是空格默认不会显示，二是利用<code class=\"language-text\">display:table;</code>可以产生一个<code class=\"language-text\">display:table-cell;</code>的匿名元素，而<code class=\"language-text\">display:table-cell;</code>可以使元素成为Block Formatting Context，从而避免了外边距叠加问题，从而和针对IE6/7的<code class=\"language-text\">zoom: 1;</code>设置表现一致。</p>\n<p>另外，如果不打算兼容IE6/7，则可以去掉<code class=\"language-text\">zoom:1;</code>，也不用<code class=\"language-text\">:before</code>伪元素，而<code class=\"language-text\">content:” ”</code>;加一个空格是为了避免Opera里面的一个bug，但是在国内Opera的份额可以忽略不计。</p>\n<p>另外的另外，我在<a href=\"http://stackoverflow.com/questions/211383/which-method-of-clearfix-is-best#answer-9932508\">这里</a>看到一个更精简的方法，兼容IE6+，代码只有三行：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.cf</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> inline-block<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">zoom</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"参考资源\" style=\"position:relative;\"><a href=\"#%E5%8F%82%E8%80%83%E8%B5%84%E6%BA%90\" aria-label=\"参考资源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考资源</h2>\n<ul>\n<li>CSS 101: Block Formatting Context: <a href=\"http://www.yuiblog.com/blog/2010/05/19/css-101-block-formatting-contexts/\">http://www.yuiblog.com/blog/2010/05/19/css-101-block-formatting-contexts/</a></li>\n<li>How To Clear Floats Without Structural Markup: <a href=\"http://www.positioniseverything.net/easyclearing.html\">http://www.positioniseverything.net/easyclearing.html</a></li>\n<li>Which method of clearfix is best?: <a href=\"http://stackoverflow.com/questions/211383/which-method-of-clearfix-is-best\">http://stackoverflow.com/questions/211383/which-method-of-clearfix-is-best</a></li>\n</ul>","timeToRead":3,"excerpt":"经典 以前最经典的清除浮动方法是利用伪元素，代码如下： 这种方法可兼容几乎所有浏览器，使用方便，不用在HTML代码中增加一个空标签，因此仍然被很多人使用。 但是，实际上针对IE6/7的方法与针对现代浏览器增加伪元素的方法本质上是不同的。针对IE6/…","frontmatter":{"title":"重新定义清除浮动","cover":"","date":"2014-05-25","category":"前端","tags":["CSS","float","清除浮动"]},"fields":{"slug":"/redefine-clearfix-float/","date":"2014-05-24T16:00:00.000Z"}}},"pageContext":{"slug":"/redefine-clearfix-float/"}},"staticQueryHashes":[]}