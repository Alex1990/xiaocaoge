{"componentChunkName":"component---src-templates-post-jsx","path":"/build-with-npm-scripts/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"npm-scripts\" style=\"position:relative;\"><a href=\"#npm-scripts\" aria-label=\"npm scripts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>npm scripts</h2>\n<h3 id=\"简介\" style=\"position:relative;\"><a href=\"#%E7%AE%80%E4%BB%8B\" aria-label=\"简介 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>简介</h3>\n<p>npm scripts 是指Npm 对于<code class=\"language-text\">package.json</code>文件中<code class=\"language-text\">&quot;scripts&quot;</code>属性的处理，通过该属性，npm 可以执行命令。</p>\n<p>比如有下面配置：</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"lint\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"eslint .\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"devDependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"eslint\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^3.1.1\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>则，使用终端，在项目目录中执行<code class=\"language-text\">npm run-script lint</code>来执行<code class=\"language-text\">eslint .</code>命令。不过，更常使用的是<code class=\"language-text\">npm run-script</code>的简写形式<code class=\"language-text\">npm run</code>来执行<code class=\"language-text\">&quot;scripts&quot;</code>中的命令，即<code class=\"language-text\">npm run lint</code>。</p>\n<p>实际上，npm 执行的命令是<code class=\"language-text\">./node_modules/.bin/eslint .</code>，原因是：</p>\n<ul>\n<li><code class=\"language-text\">eslint</code>包会在项目的<code class=\"language-text\">node_modules/.bin</code>目录下生成一个<code class=\"language-text\">eslint</code>可执行命令，<code class=\"language-text\">node_modules/.bin</code>目录专门用来存放依赖包的可执行命令；</li>\n<li>执行<code class=\"language-text\">npm run</code>时，Npm 会将<code class=\"language-text\">node_modules/.bin</code>加到环境变量<code class=\"language-text\">PATH</code>中;</li>\n</ul>\n<h3 id=\"内置的-scripts\" style=\"position:relative;\"><a href=\"#%E5%86%85%E7%BD%AE%E7%9A%84-scripts\" aria-label=\"内置的 scripts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>内置的 scripts</h3>\n<p>npm 为几个最常使用的<code class=\"language-text\">scripts</code>内置了简写命令：</p>\n<ul>\n<li>test：通过<code class=\"language-text\">npm test</code>执行；</li>\n<li>start：通过<code class=\"language-text\">npm start</code>执行；</li>\n<li>stop：通过<code class=\"language-text\">npm stop</code>执行；</li>\n<li>restart：通过<code class=\"language-text\">npm restart</code>执行；</li>\n</ul>\n<h3 id=\"pre-和-post-hooks\" style=\"position:relative;\"><a href=\"#pre-%E5%92%8C-post-hooks\" aria-label=\"pre 和 post hooks permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>pre 和 post hooks</h3>\n<p>依然以上面的<code class=\"language-text\">lint</code> script 为例，正如名字所示:</p>\n<ul>\n<li><code class=\"language-text\">prelint</code>：在执行<code class=\"language-text\">npm run lint</code>之前执行；</li>\n<li><code class=\"language-text\">postlint</code>：在执行<code class=\"language-text\">npm run lint</code>之后执行；</li>\n</ul>\n<p>即执行顺序为：<code class=\"language-text\">npm run prelint</code> -> <code class=\"language-text\">npm run lint</code> -> <code class=\"language-text\">npm run postlint</code>，如果前一个命令执行失败，即退出码（Exit Code）为非 0，则不会继续执行下一个命令。</p>\n<p>比如要在执行代码测试之前先执行<code class=\"language-text\">lint</code>，则可以通过下面配置实现：</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"lint\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"eslint .\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"mocha test/\"</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token property\">\"pretest\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm run lint\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>另外 npm 会在执行一些内置命令时，执行其<code class=\"language-text\">pre</code>与<code class=\"language-text\">post</code>命令：</p>\n<ul>\n<li>prepublish：在包发布前执行，可执行测试、构建、修改版本号等任务；</li>\n<li>preinstall：会在包被安装前执行；</li>\n<li>postinstall：会在包安装完成后执行；</li>\n<li>等等</li>\n</ul>\n<p>更多内置的<code class=\"language-text\">pre</code>和<code class=\"language-text\">post</code>可以参考<a href=\"https://docs.npmjs.com/misc/scripts\">官网文档</a>说明。</p>\n<h3 id=\"环境变量\" style=\"position:relative;\"><a href=\"#%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F\" aria-label=\"环境变量 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>环境变量</h3>\n<h4 id=\"packagejson-相关变量\" style=\"position:relative;\"><a href=\"#packagejson-%E7%9B%B8%E5%85%B3%E5%8F%98%E9%87%8F\" aria-label=\"packagejson 相关变量 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>package.json 相关变量</h4>\n<p>如果你的<code class=\"language-text\">package.json</code>文件包含<code class=\"language-text\">{ &quot;name&quot;: &quot;foo&quot;, &quot;version&quot;: &quot;1.2.3&quot; }</code>，则 npm 在 npm scripts 中添加下面两个环境变量：</p>\n<ul>\n<li><code class=\"language-text\">npm_package_name</code></li>\n<li><code class=\"language-text\">npm_package_version</code></li>\n</ul>\n<h4 id=\"自定义环境变量\" style=\"position:relative;\"><a href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F\" aria-label=\"自定义环境变量 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>自定义环境变量</h4>\n<p>可以通过<code class=\"language-text\">package.json</code>中的<code class=\"language-text\">&quot;config&quot;</code>对象自定义一些环境变量，比如：</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"config\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"port\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"8080\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node server.js --port ${npm_package_config_port}\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"npmlifecycleevent\" style=\"position:relative;\"><a href=\"#npmlifecycleevent\" aria-label=\"npmlifecycleevent permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>npm<em>lifecycle</em>event</h4>\n<p>npm 正在执行哪个 npm script，<code class=\"language-text\">npm_lifecycle_event</code>环境变量值就会设为其值，比如</p>\n<ul>\n<li>执行<code class=\"language-text\">npm start</code>命令时，则其值为<code class=\"language-text\">&quot;start&quot;</code>；</li>\n<li>执行<code class=\"language-text\">npm run build</code>命令时，其值为<code class=\"language-text\">&quot;build&quot;</code>；</li>\n</ul>\n<p>从而可以根据该值判断正在执行的命令，然后就可以做不同的事。比如，<code class=\"language-text\">npm start</code>用于生成开发环境版本代码，而<code class=\"language-text\">npm run build</code>用于生成生产环境代码，这就可以在执行构建任务时，通过<code class=\"language-text\">npm_lifecycle_event</code>来判断。</p>\n<p><strong>关于 npm scripts 更多及更详细的使用请参考官方文档：<a href=\"https://docs.npmjs.com/misc/scripts#environment\">npm scripts</a></strong>。</p>\n<h2 id=\"grunt-vs-gulp-vs-npm-scripts\" style=\"position:relative;\"><a href=\"#grunt-vs-gulp-vs-npm-scripts\" aria-label=\"grunt vs gulp vs npm scripts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Grunt vs Gulp vs npm scripts</h2>\n<p>关于这三者作为构建工具的对比，已经有人说明的很切中要点，也很细致了，流行的两篇文章：<a href=\"http://blog.keithcirkel.co.uk/why-we-should-stop-using-grunt/\">Why we should stop using Grunt &#x26; Gulp</a> 和 <a href=\"https://medium.freecodecamp.com/why-i-left-gulp-and-grunt-for-npm-scripts-3d6853dd22b8#.d3jk4vv46\">Why I Left Gulp and Grunt for npm Scripts</a>。对于文章中的观点，我也很赞同，在此只简单列下文章作者的观点。</p>\n<h3 id=\"gulp-与-grunt-的不足\" style=\"position:relative;\"><a href=\"#gulp-%E4%B8%8E-grunt-%E7%9A%84%E4%B8%8D%E8%B6%B3\" aria-label=\"gulp 与 grunt 的不足 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gulp 与 Grunt 的不足</h3>\n<p>总得来说就是 Gulp 与 Grunt 引入了一层复杂但是多余的抽象层，用来抽象直接的构建命令，比如<code class=\"language-text\">gulp-uglify</code>和<code class=\"language-text\">grunt-contrib-uglify</code>用来包装<code class=\"language-text\">uglifyjs</code>命令。这层抽象所建立的插件生态带来了很多问题：</p>\n<ul>\n<li>额外的抽象，带来了额外的学习成本；</li>\n<li>插件依赖作者，无论是插件质量、设计合理性、文档、更新及时性等严重依赖作者自身的水平与投入；</li>\n</ul>\n<p>为什么 npm scripts 先前使用的人不多？这可能是因为很多人存在对 npm scripts 的误解：</p>\n<ul>\n<li>人们认为 npm scripts 需要熟悉命令行技能；</li>\n<li>人们认为 npm scripts 不够强大；</li>\n<li>人们认为 Gulp 的流（stream）对于快速构建是必须的；</li>\n<li>人们认为 npm scripts 不能跨平台；</li>\n</ul>\n<p>而真相是：</p>\n<ul>\n<li>npm scripts 并不需要熟悉命令行技能，当然熟悉的话更好；</li>\n<li>npm scripts 可以完成绝大多数 Grunt 与 Gulp 完成的任务，实在不行还可以写 NodeJS 代码来完成；</li>\n<li>因为 npm scripts 在一个 Shell 环境中执行的，而 Shell 天生支持<strong>流</strong>；</li>\n<li>几个常见的命令操作符<code class=\"language-text\">&amp;&amp;</code>/<code class=\"language-text\">&lt;</code>/<code class=\"language-text\">&gt;</code>/<code class=\"language-text\">|</code>是跨平台的，对于一些 Linux/Mac 中的 Shell 命令可以使用 <a href=\"https://www.npmjs.com/package/shelljs\">shelljs</a> 来实现跨平台；</li>\n</ul>\n<p>而 npm scripts 的不足是由于<code class=\"language-text\">package.json</code>文件不可以写注释，对于复杂的构建任务，代码可读性很差。这个可以尽量通过贴切的命名，任务细分来减轻。另外就是需要熟悉各构建工具的命令行使用方式。</p>\n<h2 id=\"npm-scripts-构建实例\" style=\"position:relative;\"><a href=\"#npm-scripts-%E6%9E%84%E5%BB%BA%E5%AE%9E%E4%BE%8B\" aria-label=\"npm scripts 构建实例 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>npm scripts 构建实例</h2>\n<p>关于如何使用 npm scripts 来完成创建的前端开发当中的构建任务，可以参考 <a href=\"http://blog.keithcirkel.co.uk/how-to-use-npm-as-a-build-tool/#replacingbuildtools\">How to Use npm as a Build Tool</a> 一文的教程，以及 github 上面的例子<a href=\"https://github.com/keithamus/npm-scripts-example\">npm-scripts-example</a>。</p>\n<p>总得来说，下面常见的构建任务都可以使用 npm scripts 来完成：</p>\n<ul>\n<li>Lint</li>\n<li>CSS 预处理</li>\n<li>ES2015+/React 编译</li>\n<li>JS 依赖打包</li>\n<li>压缩</li>\n<li>合并</li>\n<li>清除文件</li>\n<li>测试</li>\n<li>监听文件改动</li>\n<li>LiveReload</li>\n</ul>\n<h2 id=\"后话\" style=\"position:relative;\"><a href=\"#%E5%90%8E%E8%AF%9D\" aria-label=\"后话 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>后话</h2>\n<p>到现在，我还会回想下，为什么 Grunt 与 Gulp 会大火？我觉得是因为前端中存在相当一部分很少接触命令行的开发者，对于 Linux/Mac 的命令行有点儿恐惧而不愿意学习它，另外看到构建工具命令行复杂的参数也会心生退却。个人认为，npm scripts 学习成本并不比 Grunt/Gulp 高，对于熟悉构建工具命令的人来说就更低了。所以，一个东西火，不代表它就是好的解决方案，只是代表很多人在关注和使用罢了。</p>\n<h2 id=\"参考\" style=\"position:relative;\"><a href=\"#%E5%8F%82%E8%80%83\" aria-label=\"参考 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考</h2>\n<ul>\n<li>官方文档：<a href=\"https://docs.npmjs.com/misc/scripts#environment\">npm scripts</a></li>\n<li><a href=\"http://blog.keithcirkel.co.uk/why-we-should-stop-using-grunt/\">Why we should stop using Grunt &#x26; Gulp</a></li>\n<li><a href=\"https://medium.freecodecamp.com/why-i-left-gulp-and-grunt-for-npm-scripts-3d6853dd22b8#.d3jk4vv46\">Why I Left Gulp and Grunt for npm Scripts</a></li>\n<li><a href=\"http://blog.keithcirkel.co.uk/how-to-use-npm-as-a-build-tool/\">How to Use npm as a Build Tool</a></li>\n<li><a href=\"https://css-tricks.com/why-npm-scripts/\">Why npm Scripts</a></li>\n</ul>","timeToRead":7,"excerpt":"npm scripts 简介 npm scripts 是指Npm 对于文件中属性的处理，通过该属性，npm 可以执行命令。 比如有下面配置： 则，使用终端，在项目目录中执行来执行命令。不过，更常使用的是的简写形式来执行中的命令，即。 实际上，npm…","frontmatter":{"title":"使用 npm scripts 作为构建工具","cover":"","date":"2016-07-24","category":"前端","tags":["构建","npm scripts","Grunt","Gulp"]},"fields":{"slug":"/build-with-npm-scripts/","date":"2016-07-23T16:00:00.000Z"}}},"pageContext":{"slug":"/build-with-npm-scripts/"}},"staticQueryHashes":[]}